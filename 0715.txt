07/15
git config --global user.name "이름"
git config --global user.email "이메일" //해당 이름과 이메일로 커밋이 된다.


<css>
html과 더불어 더 다양한 시각적 표현에 css를 이용한다.
3가지 방법이 있다. internal style sheet 을 이용한다.
1. 외부 파일
3. 태그에 직접 활용

<head>태그 안에 <style>태그가 들어간다.

css 문법 : selector - 태그 클래스이름 id 등이 들어가고 이후 중괄호에 속성이름과 값이 들어간다.
해당 태그 {속성 : 값; 속성: 값}으로 이루어진다.
	id selector : 특정한개만 됨 #id
		원하는 태그에 id="아이디"를 추가한다.
	class selector : 여러개가 된다. .class
		- 원하는 태그에 class="클래스이름" 을 추가한다.
	descendant selector - 그 안에 있기만 하면 해당이 된다.
		element element
	child celector - 바로 밑에 있어야만 해당된다. 
 		element > element

<selenium>
일종의 외부 라이브러리 - 자바 기본 라이브러리 외
maven을 활용해서 selenium라이브러리를 다운받는다.	
	- 한가지만 다운 받는 것이 아니라 연결된 다수의 라이브러리가 다운 받아진다.
		- maven의 장점!
크롬 드라이버를 이용하여 selenium을 통해 자바로 접근할 수 있다.
	- 크롬 버전을 맞춰줘야한다. 설정에서 확인!
	- 다운 받아서 이클립스 프로젝트 폴더로 드래그
driver를 조종하기 위해 드라이버 객체를 만들어야한다.

WebDriver driver = new ChromeDriver();
각각 컨트롤+스페이스 를 통해 임포트해줘야한다.
new ChromeDriver(); 를 통해 브라우저가 뜨고 get()을 통해 주소로 이동한다.

개발자 도구 F12 에 들어가서 커서 버튼을 누르고 원하는 버튼의 html로 간다.
	- 우클릭 후 copy > copy selector 를 해주면 자동적으로 selector를 복사해준다.

WebElement , fineElement 컨트롤 스페이스

id가 존재하는 경우 id를 이용하면 된다.

li: 밑을 지우는 것을 통해 모든 li에 접근한다.

thread.sleep(3000); 을 통해 time sleep 을 넣을 수 있다.

<Framework> : 뼈대, 골격
이미 만들어 놓은 solution. java > spring 이라는 framework을 이용하여 웹서비스를 만든다. 
Back-end
//
Front-end : HTML. css. / Javascript => Vue.js 를 이용하여 UI등을 만든다.
	   -하나의 문서	- 서식 뿐만 아니라 집계 등의 기능을 갖게 된다.

<web architecture>
브라우저에 naver.com 이라고 치면 그 웹사이트로 이동하지만, 그것은 서버 이름이다. 숫자 4개로 이루어진 
주소를 서버가 받아 HTML CSS JAVASCRIPT 를 보여준다. 이때 보이는 것을 FRONT-END, 보이지 않는 DB 나 서버 등을 BACK-END 라고 한다.

<VScode>
.html 파일을 생성하고 ! 를 통해 emmet을 해준다.
script 태그는 body 안에 / console.log("Hello World!") 를 통해 출력 이는 개발자 도구 안에 console 에서 보인다.
브라우저 마다 읽는 방식이 조금씩은 다르지만 거의 유사하다. html css javascript를 해석해서 보여주는 역할

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    h1 { color : red }
  </style>
</head>
<body>

  <h1>자바스크립트 연습</h1>
  <p>Hello JavaScript</p>
  <script>
    console.log("Hello World!")
  </script>

</body>
</html>


<알고리즘>
최대 2시간까지만 고민해볼 것 > 이후엔 검색 
"시간제한" 





